// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: grpc/decode/decodepb/decode.proto

package decodepb

import (
	context "context"
	blockpb "github.com/figment-networks/polkadothub-proxy/grpc/block/blockpb"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type DecodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Block                   []byte `protobuf:"bytes,1,opt,name=block,proto3" json:"block,omitempty"`
	BlockHash               string `protobuf:"bytes,2,opt,name=block_hash,json=blockHash,proto3" json:"block_hash,omitempty"`
	Events                  []byte `protobuf:"bytes,3,opt,name=events,proto3" json:"events,omitempty"`
	Timestamp               []byte `protobuf:"bytes,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	MetadataParent          []byte `protobuf:"bytes,5,opt,name=metadata_parent,json=metadataParent,proto3" json:"metadata_parent,omitempty"`
	RuntimeParent           []byte `protobuf:"bytes,6,opt,name=runtime_parent,json=runtimeParent,proto3" json:"runtime_parent,omitempty"`
	NextFeeMultiplierParent []byte `protobuf:"bytes,7,opt,name=next_fee_multiplier_parent,json=nextFeeMultiplierParent,proto3" json:"next_fee_multiplier_parent,omitempty"`
	CurrentEraParent        []byte `protobuf:"bytes,8,opt,name=current_era_parent,json=currentEraParent,proto3" json:"current_era_parent,omitempty"`
	Chain                   string `protobuf:"bytes,9,opt,name=chain,proto3" json:"chain,omitempty"`
}

func (x *DecodeRequest) Reset() {
	*x = DecodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_decode_decodepb_decode_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DecodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecodeRequest) ProtoMessage() {}

func (x *DecodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_decode_decodepb_decode_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecodeRequest.ProtoReflect.Descriptor instead.
func (*DecodeRequest) Descriptor() ([]byte, []int) {
	return file_grpc_decode_decodepb_decode_proto_rawDescGZIP(), []int{0}
}

func (x *DecodeRequest) GetBlock() []byte {
	if x != nil {
		return x.Block
	}
	return nil
}

func (x *DecodeRequest) GetBlockHash() string {
	if x != nil {
		return x.BlockHash
	}
	return ""
}

func (x *DecodeRequest) GetEvents() []byte {
	if x != nil {
		return x.Events
	}
	return nil
}

func (x *DecodeRequest) GetTimestamp() []byte {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *DecodeRequest) GetMetadataParent() []byte {
	if x != nil {
		return x.MetadataParent
	}
	return nil
}

func (x *DecodeRequest) GetRuntimeParent() []byte {
	if x != nil {
		return x.RuntimeParent
	}
	return nil
}

func (x *DecodeRequest) GetNextFeeMultiplierParent() []byte {
	if x != nil {
		return x.NextFeeMultiplierParent
	}
	return nil
}

func (x *DecodeRequest) GetCurrentEraParent() []byte {
	if x != nil {
		return x.CurrentEraParent
	}
	return nil
}

func (x *DecodeRequest) GetChain() string {
	if x != nil {
		return x.Chain
	}
	return ""
}

type DecodeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Block *blockpb.GetByHeightResponse `protobuf:"bytes,1,opt,name=block,proto3" json:"block,omitempty"`
	Epoch string                       `protobuf:"bytes,2,opt,name=epoch,proto3" json:"epoch,omitempty"`
}

func (x *DecodeResponse) Reset() {
	*x = DecodeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_decode_decodepb_decode_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DecodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecodeResponse) ProtoMessage() {}

func (x *DecodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_decode_decodepb_decode_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecodeResponse.ProtoReflect.Descriptor instead.
func (*DecodeResponse) Descriptor() ([]byte, []int) {
	return file_grpc_decode_decodepb_decode_proto_rawDescGZIP(), []int{1}
}

func (x *DecodeResponse) GetBlock() *blockpb.GetByHeightResponse {
	if x != nil {
		return x.Block
	}
	return nil
}

func (x *DecodeResponse) GetEpoch() string {
	if x != nil {
		return x.Epoch
	}
	return ""
}

var File_grpc_decode_decodepb_decode_proto protoreflect.FileDescriptor

var file_grpc_decode_decodepb_decode_proto_rawDesc = []byte{
	0x0a, 0x21, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x64, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x2f, 0x64, 0x65,
	0x63, 0x6f, 0x64, 0x65, 0x70, 0x62, 0x2f, 0x64, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x06, 0x64, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x1a, 0x1e, 0x67, 0x72, 0x70,
	0x63, 0x2f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x70, 0x62, 0x2f,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xcb, 0x02, 0x0a, 0x0d,
	0x44, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x61, 0x73,
	0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61,
	0x73, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x27, 0x0a, 0x0f, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x5f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x0e, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x50, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x70, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x72, 0x75, 0x6e, 0x74, 0x69,
	0x6d, 0x65, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x3b, 0x0a, 0x1a, 0x6e, 0x65, 0x78, 0x74,
	0x5f, 0x66, 0x65, 0x65, 0x5f, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x69, 0x65, 0x72, 0x5f,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x17, 0x6e, 0x65,
	0x78, 0x74, 0x46, 0x65, 0x65, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x69, 0x65, 0x72, 0x50,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x5f, 0x65, 0x72, 0x61, 0x5f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x10, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x45, 0x72, 0x61, 0x50, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x22, 0x58, 0x0a, 0x0e, 0x44, 0x65, 0x63,
	0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x05, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x79, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x14, 0x0a,
	0x05, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x70,
	0x6f, 0x63, 0x68, 0x32, 0x4a, 0x0a, 0x0d, 0x44, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x39, 0x0a, 0x06, 0x44, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x15,
	0x2e, 0x64, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x44, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x64, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x44,
	0x65, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42,
	0x44, 0x5a, 0x42, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x66, 0x69,
	0x67, 0x6d, 0x65, 0x6e, 0x74, 0x2d, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x2f, 0x70,
	0x6f, 0x6c, 0x6b, 0x61, 0x64, 0x6f, 0x74, 0x68, 0x75, 0x62, 0x2d, 0x70, 0x72, 0x6f, 0x78, 0x79,
	0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x64, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x2f, 0x64, 0x65, 0x63,
	0x6f, 0x64, 0x65, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_grpc_decode_decodepb_decode_proto_rawDescOnce sync.Once
	file_grpc_decode_decodepb_decode_proto_rawDescData = file_grpc_decode_decodepb_decode_proto_rawDesc
)

func file_grpc_decode_decodepb_decode_proto_rawDescGZIP() []byte {
	file_grpc_decode_decodepb_decode_proto_rawDescOnce.Do(func() {
		file_grpc_decode_decodepb_decode_proto_rawDescData = protoimpl.X.CompressGZIP(file_grpc_decode_decodepb_decode_proto_rawDescData)
	})
	return file_grpc_decode_decodepb_decode_proto_rawDescData
}

var file_grpc_decode_decodepb_decode_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_grpc_decode_decodepb_decode_proto_goTypes = []interface{}{
	(*DecodeRequest)(nil),               // 0: decode.DecodeRequest
	(*DecodeResponse)(nil),              // 1: decode.DecodeResponse
	(*blockpb.GetByHeightResponse)(nil), // 2: block.GetByHeightResponse
}
var file_grpc_decode_decodepb_decode_proto_depIdxs = []int32{
	2, // 0: decode.DecodeResponse.block:type_name -> block.GetByHeightResponse
	0, // 1: decode.DecodeService.Decode:input_type -> decode.DecodeRequest
	1, // 2: decode.DecodeService.Decode:output_type -> decode.DecodeResponse
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_grpc_decode_decodepb_decode_proto_init() }
func file_grpc_decode_decodepb_decode_proto_init() {
	if File_grpc_decode_decodepb_decode_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_grpc_decode_decodepb_decode_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DecodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_decode_decodepb_decode_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DecodeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_grpc_decode_decodepb_decode_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_grpc_decode_decodepb_decode_proto_goTypes,
		DependencyIndexes: file_grpc_decode_decodepb_decode_proto_depIdxs,
		MessageInfos:      file_grpc_decode_decodepb_decode_proto_msgTypes,
	}.Build()
	File_grpc_decode_decodepb_decode_proto = out.File
	file_grpc_decode_decodepb_decode_proto_rawDesc = nil
	file_grpc_decode_decodepb_decode_proto_goTypes = nil
	file_grpc_decode_decodepb_decode_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// DecodeServiceClient is the client API for DecodeService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DecodeServiceClient interface {
	Decode(ctx context.Context, in *DecodeRequest, opts ...grpc.CallOption) (*DecodeResponse, error)
}

type decodeServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewDecodeServiceClient(cc grpc.ClientConnInterface) DecodeServiceClient {
	return &decodeServiceClient{cc}
}

func (c *decodeServiceClient) Decode(ctx context.Context, in *DecodeRequest, opts ...grpc.CallOption) (*DecodeResponse, error) {
	out := new(DecodeResponse)
	err := c.cc.Invoke(ctx, "/decode.DecodeService/Decode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DecodeServiceServer is the server API for DecodeService service.
type DecodeServiceServer interface {
	Decode(context.Context, *DecodeRequest) (*DecodeResponse, error)
}

// UnimplementedDecodeServiceServer can be embedded to have forward compatible implementations.
type UnimplementedDecodeServiceServer struct {
}

func (*UnimplementedDecodeServiceServer) Decode(context.Context, *DecodeRequest) (*DecodeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Decode not implemented")
}

func RegisterDecodeServiceServer(s *grpc.Server, srv DecodeServiceServer) {
	s.RegisterService(&_DecodeService_serviceDesc, srv)
}

func _DecodeService_Decode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DecodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DecodeServiceServer).Decode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/decode.DecodeService/Decode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DecodeServiceServer).Decode(ctx, req.(*DecodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _DecodeService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "decode.DecodeService",
	HandlerType: (*DecodeServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Decode",
			Handler:    _DecodeService_Decode_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "grpc/decode/decodepb/decode.proto",
}
