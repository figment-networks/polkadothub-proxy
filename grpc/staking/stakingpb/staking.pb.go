// Code generated by protoc-gen-go. DO NOT EDIT.
// source: grpc/staking/stakingpb/staking.proto

package stakingpb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Stake struct {
	StashAccount         string   `protobuf:"bytes,1,opt,name=stash_account,json=stashAccount,proto3" json:"stash_account,omitempty"`
	ControllerAccount    string   `protobuf:"bytes,2,opt,name=controller_account,json=controllerAccount,proto3" json:"controller_account,omitempty"`
	Stake                int64    `protobuf:"varint,3,opt,name=stake,proto3" json:"stake,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Stake) Reset()         { *m = Stake{} }
func (m *Stake) String() string { return proto.CompactTextString(m) }
func (*Stake) ProtoMessage()    {}
func (*Stake) Descriptor() ([]byte, []int) {
	return fileDescriptor_c6736eb38aebd97d, []int{0}
}

func (m *Stake) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Stake.Unmarshal(m, b)
}
func (m *Stake) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Stake.Marshal(b, m, deterministic)
}
func (m *Stake) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Stake.Merge(m, src)
}
func (m *Stake) XXX_Size() int {
	return xxx_messageInfo_Stake.Size(m)
}
func (m *Stake) XXX_DiscardUnknown() {
	xxx_messageInfo_Stake.DiscardUnknown(m)
}

var xxx_messageInfo_Stake proto.InternalMessageInfo

func (m *Stake) GetStashAccount() string {
	if m != nil {
		return m.StashAccount
	}
	return ""
}

func (m *Stake) GetControllerAccount() string {
	if m != nil {
		return m.ControllerAccount
	}
	return ""
}

func (m *Stake) GetStake() int64 {
	if m != nil {
		return m.Stake
	}
	return 0
}

type Validator struct {
	StashAccount         string   `protobuf:"bytes,1,opt,name=stash_account,json=stashAccount,proto3" json:"stash_account,omitempty"`
	ControllerAccount    string   `protobuf:"bytes,2,opt,name=controller_account,json=controllerAccount,proto3" json:"controller_account,omitempty"`
	Commission           int64    `protobuf:"varint,3,opt,name=commission,proto3" json:"commission,omitempty"`
	RewardPoints         int64    `protobuf:"varint,4,opt,name=reward_points,json=rewardPoints,proto3" json:"reward_points,omitempty"`
	TotalStake           int64    `protobuf:"varint,5,opt,name=total_stake,json=totalStake,proto3" json:"total_stake,omitempty"`
	OwnStake             int64    `protobuf:"varint,6,opt,name=own_stake,json=ownStake,proto3" json:"own_stake,omitempty"`
	StakersStake         int64    `protobuf:"varint,7,opt,name=stakers_stake,json=stakersStake,proto3" json:"stakers_stake,omitempty"`
	Stakers              []*Stake `protobuf:"bytes,8,rep,name=stakers,proto3" json:"stakers,omitempty"`
	SessionKeys          []string `protobuf:"bytes,9,rep,name=session_keys,json=sessionKeys,proto3" json:"session_keys,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Validator) Reset()         { *m = Validator{} }
func (m *Validator) String() string { return proto.CompactTextString(m) }
func (*Validator) ProtoMessage()    {}
func (*Validator) Descriptor() ([]byte, []int) {
	return fileDescriptor_c6736eb38aebd97d, []int{1}
}

func (m *Validator) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Validator.Unmarshal(m, b)
}
func (m *Validator) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Validator.Marshal(b, m, deterministic)
}
func (m *Validator) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Validator.Merge(m, src)
}
func (m *Validator) XXX_Size() int {
	return xxx_messageInfo_Validator.Size(m)
}
func (m *Validator) XXX_DiscardUnknown() {
	xxx_messageInfo_Validator.DiscardUnknown(m)
}

var xxx_messageInfo_Validator proto.InternalMessageInfo

func (m *Validator) GetStashAccount() string {
	if m != nil {
		return m.StashAccount
	}
	return ""
}

func (m *Validator) GetControllerAccount() string {
	if m != nil {
		return m.ControllerAccount
	}
	return ""
}

func (m *Validator) GetCommission() int64 {
	if m != nil {
		return m.Commission
	}
	return 0
}

func (m *Validator) GetRewardPoints() int64 {
	if m != nil {
		return m.RewardPoints
	}
	return 0
}

func (m *Validator) GetTotalStake() int64 {
	if m != nil {
		return m.TotalStake
	}
	return 0
}

func (m *Validator) GetOwnStake() int64 {
	if m != nil {
		return m.OwnStake
	}
	return 0
}

func (m *Validator) GetStakersStake() int64 {
	if m != nil {
		return m.StakersStake
	}
	return 0
}

func (m *Validator) GetStakers() []*Stake {
	if m != nil {
		return m.Stakers
	}
	return nil
}

func (m *Validator) GetSessionKeys() []string {
	if m != nil {
		return m.SessionKeys
	}
	return nil
}

type Staking struct {
	Session              int64        `protobuf:"varint,1,opt,name=session,proto3" json:"session,omitempty"`
	Era                  int64        `protobuf:"varint,2,opt,name=era,proto3" json:"era,omitempty"`
	TotalStake           int64        `protobuf:"varint,3,opt,name=total_stake,json=totalStake,proto3" json:"total_stake,omitempty"`
	TotalRewardPayout    int64        `protobuf:"varint,4,opt,name=total_reward_payout,json=totalRewardPayout,proto3" json:"total_reward_payout,omitempty"`
	TotalRewardPoints    int64        `protobuf:"varint,5,opt,name=total_reward_points,json=totalRewardPoints,proto3" json:"total_reward_points,omitempty"`
	Validators           []*Validator `protobuf:"bytes,6,rep,name=validators,proto3" json:"validators,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Staking) Reset()         { *m = Staking{} }
func (m *Staking) String() string { return proto.CompactTextString(m) }
func (*Staking) ProtoMessage()    {}
func (*Staking) Descriptor() ([]byte, []int) {
	return fileDescriptor_c6736eb38aebd97d, []int{2}
}

func (m *Staking) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Staking.Unmarshal(m, b)
}
func (m *Staking) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Staking.Marshal(b, m, deterministic)
}
func (m *Staking) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Staking.Merge(m, src)
}
func (m *Staking) XXX_Size() int {
	return xxx_messageInfo_Staking.Size(m)
}
func (m *Staking) XXX_DiscardUnknown() {
	xxx_messageInfo_Staking.DiscardUnknown(m)
}

var xxx_messageInfo_Staking proto.InternalMessageInfo

func (m *Staking) GetSession() int64 {
	if m != nil {
		return m.Session
	}
	return 0
}

func (m *Staking) GetEra() int64 {
	if m != nil {
		return m.Era
	}
	return 0
}

func (m *Staking) GetTotalStake() int64 {
	if m != nil {
		return m.TotalStake
	}
	return 0
}

func (m *Staking) GetTotalRewardPayout() int64 {
	if m != nil {
		return m.TotalRewardPayout
	}
	return 0
}

func (m *Staking) GetTotalRewardPoints() int64 {
	if m != nil {
		return m.TotalRewardPoints
	}
	return 0
}

func (m *Staking) GetValidators() []*Validator {
	if m != nil {
		return m.Validators
	}
	return nil
}

type GetByHeightRequest struct {
	Height               int64    `protobuf:"varint,1,opt,name=height,proto3" json:"height,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetByHeightRequest) Reset()         { *m = GetByHeightRequest{} }
func (m *GetByHeightRequest) String() string { return proto.CompactTextString(m) }
func (*GetByHeightRequest) ProtoMessage()    {}
func (*GetByHeightRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c6736eb38aebd97d, []int{3}
}

func (m *GetByHeightRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetByHeightRequest.Unmarshal(m, b)
}
func (m *GetByHeightRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetByHeightRequest.Marshal(b, m, deterministic)
}
func (m *GetByHeightRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetByHeightRequest.Merge(m, src)
}
func (m *GetByHeightRequest) XXX_Size() int {
	return xxx_messageInfo_GetByHeightRequest.Size(m)
}
func (m *GetByHeightRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetByHeightRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetByHeightRequest proto.InternalMessageInfo

func (m *GetByHeightRequest) GetHeight() int64 {
	if m != nil {
		return m.Height
	}
	return 0
}

type GetByHeightResponse struct {
	Staking              *Staking `protobuf:"bytes,1,opt,name=staking,proto3" json:"staking,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetByHeightResponse) Reset()         { *m = GetByHeightResponse{} }
func (m *GetByHeightResponse) String() string { return proto.CompactTextString(m) }
func (*GetByHeightResponse) ProtoMessage()    {}
func (*GetByHeightResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c6736eb38aebd97d, []int{4}
}

func (m *GetByHeightResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetByHeightResponse.Unmarshal(m, b)
}
func (m *GetByHeightResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetByHeightResponse.Marshal(b, m, deterministic)
}
func (m *GetByHeightResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetByHeightResponse.Merge(m, src)
}
func (m *GetByHeightResponse) XXX_Size() int {
	return xxx_messageInfo_GetByHeightResponse.Size(m)
}
func (m *GetByHeightResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetByHeightResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetByHeightResponse proto.InternalMessageInfo

func (m *GetByHeightResponse) GetStaking() *Staking {
	if m != nil {
		return m.Staking
	}
	return nil
}

func init() {
	proto.RegisterType((*Stake)(nil), "staking.Stake")
	proto.RegisterType((*Validator)(nil), "staking.Validator")
	proto.RegisterType((*Staking)(nil), "staking.Staking")
	proto.RegisterType((*GetByHeightRequest)(nil), "staking.GetByHeightRequest")
	proto.RegisterType((*GetByHeightResponse)(nil), "staking.GetByHeightResponse")
}

func init() {
	proto.RegisterFile("grpc/staking/stakingpb/staking.proto", fileDescriptor_c6736eb38aebd97d)
}

var fileDescriptor_c6736eb38aebd97d = []byte{
	// 487 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x93, 0xdf, 0x6e, 0xd3, 0x30,
	0x14, 0xc6, 0xe9, 0x42, 0xdb, 0xf5, 0xa4, 0x4c, 0x9b, 0x87, 0x50, 0xc4, 0x10, 0x94, 0xc0, 0x45,
	0x84, 0x68, 0x2b, 0x95, 0x27, 0xd8, 0x84, 0x00, 0xc1, 0x0d, 0x72, 0x25, 0x2e, 0x10, 0x52, 0xe5,
	0xa6, 0x26, 0xb5, 0x92, 0xfa, 0x64, 0xb6, 0xbb, 0x92, 0xf7, 0xe4, 0x29, 0x78, 0x0a, 0x54, 0xff,
	0x29, 0x1d, 0xdd, 0xed, 0xae, 0x9a, 0xf3, 0x7d, 0x3f, 0xfb, 0xf8, 0x7c, 0xb5, 0xe1, 0x75, 0xa1,
	0xea, 0x7c, 0xac, 0x0d, 0x2b, 0x85, 0x2c, 0xc2, 0x6f, 0x3d, 0x0f, 0x5f, 0xa3, 0x5a, 0xa1, 0x41,
	0xd2, 0xf5, 0x65, 0x7a, 0x0d, 0xed, 0xa9, 0x61, 0x25, 0x27, 0xaf, 0xe0, 0x91, 0x36, 0x4c, 0x2f,
	0x67, 0x2c, 0xcf, 0x71, 0x2d, 0x4d, 0xd2, 0x1a, 0xb4, 0xb2, 0x1e, 0xed, 0x5b, 0xf1, 0xd2, 0x69,
	0x64, 0x08, 0x24, 0x47, 0x69, 0x14, 0x56, 0x15, 0x57, 0x3b, 0xf2, 0xc8, 0x92, 0x67, 0xff, 0x9c,
	0x80, 0x3f, 0x86, 0xf6, 0xb6, 0x0f, 0x4f, 0xa2, 0x41, 0x2b, 0x8b, 0xa8, 0x2b, 0xd2, 0xdf, 0x47,
	0xd0, 0xfb, 0xc6, 0x2a, 0xb1, 0x60, 0x06, 0xd5, 0xbd, 0xf4, 0x7d, 0x0e, 0x90, 0xe3, 0x6a, 0x25,
	0xb4, 0x16, 0x28, 0x7d, 0xf3, 0x3d, 0x65, 0xdb, 0x53, 0xf1, 0x0d, 0x53, 0x8b, 0x59, 0x8d, 0x42,
	0x1a, 0x9d, 0x3c, 0xb4, 0x48, 0xdf, 0x89, 0x5f, 0xad, 0x46, 0x5e, 0x40, 0x6c, 0xd0, 0xb0, 0x6a,
	0xe6, 0x46, 0x68, 0xbb, 0x5d, 0xac, 0xe4, 0x12, 0xbb, 0x80, 0x1e, 0x6e, 0xa4, 0xb7, 0x3b, 0xd6,
	0x3e, 0xc6, 0x8d, 0xdc, 0x8f, 0xb3, 0xe4, 0x4a, 0x7b, 0xa0, 0xeb, 0x5a, 0x78, 0xd1, 0x41, 0x19,
	0x74, 0x7d, 0x9d, 0x1c, 0x0f, 0xa2, 0x2c, 0x9e, 0x9c, 0x8c, 0xc2, 0xdf, 0x64, 0x01, 0x1a, 0x6c,
	0xf2, 0x12, 0xfa, 0x9a, 0xdb, 0xc3, 0xcf, 0x4a, 0xde, 0xe8, 0xa4, 0x37, 0x88, 0xb2, 0x1e, 0x8d,
	0xbd, 0xf6, 0x85, 0x37, 0x3a, 0xfd, 0xd3, 0x82, 0xee, 0xd4, 0xad, 0x26, 0x09, 0x74, 0xbd, 0x65,
	0xe3, 0x8c, 0x68, 0x28, 0xc9, 0x29, 0x44, 0x5c, 0x31, 0x1b, 0x5d, 0x44, 0xb7, 0x9f, 0xff, 0xcf,
	0x19, 0x1d, 0xcc, 0x39, 0x82, 0x73, 0x07, 0x84, 0xcc, 0x58, 0x83, 0x6b, 0xe3, 0x33, 0x3b, 0xb3,
	0x16, 0x75, 0xc1, 0x59, 0xe3, 0x90, 0x77, 0x19, 0xb7, 0x0f, 0x79, 0x17, 0xf4, 0x04, 0xe0, 0x26,
	0x5c, 0x07, 0x9d, 0x74, 0x6c, 0x10, 0x64, 0x17, 0xc4, 0xee, 0xa6, 0xd0, 0x3d, 0x2a, 0x7d, 0x0b,
	0xe4, 0x23, 0x37, 0x57, 0xcd, 0x27, 0x2e, 0x8a, 0xa5, 0xa1, 0xfc, 0x7a, 0xcd, 0xb5, 0x21, 0x4f,
	0xa0, 0xb3, 0xb4, 0x82, 0x9f, 0xda, 0x57, 0xe9, 0x25, 0x9c, 0xdf, 0xa2, 0x75, 0x8d, 0x52, 0x73,
	0xf2, 0x06, 0xc2, 0x33, 0xb0, 0x7c, 0x3c, 0x39, 0xbd, 0x15, 0xbf, 0x90, 0x05, 0x0d, 0xc0, 0xe4,
	0x07, 0x9c, 0x78, 0x6d, 0xca, 0xd5, 0x8d, 0xc8, 0x39, 0xf9, 0x0c, 0xf1, 0xde, 0xa6, 0xe4, 0x62,
	0xb7, 0xf6, 0xf0, 0x60, 0x4f, 0x9f, 0xdd, 0x6d, 0xba, 0x73, 0xa4, 0x0f, 0xae, 0x3e, 0x7c, 0x7f,
	0x5f, 0x08, 0xb3, 0x5c, 0xcf, 0x47, 0x39, 0xae, 0xc6, 0x3f, 0x45, 0xb1, 0xe2, 0xd2, 0x0c, 0x25,
	0x37, 0x1b, 0x54, 0xa5, 0x1e, 0xd7, 0x58, 0x95, 0x6c, 0x81, 0x5b, 0x60, 0x58, 0x2b, 0xfc, 0xd5,
	0x8c, 0xef, 0x7e, 0xe4, 0xf3, 0x8e, 0x7d, 0xdd, 0xef, 0xfe, 0x06, 0x00, 0x00, 0xff, 0xff, 0x11,
	0x85, 0xc6, 0x67, 0x05, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// StakingServiceClient is the client API for StakingService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type StakingServiceClient interface {
	GetByHeight(ctx context.Context, in *GetByHeightRequest, opts ...grpc.CallOption) (*GetByHeightResponse, error)
}

type stakingServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewStakingServiceClient(cc grpc.ClientConnInterface) StakingServiceClient {
	return &stakingServiceClient{cc}
}

func (c *stakingServiceClient) GetByHeight(ctx context.Context, in *GetByHeightRequest, opts ...grpc.CallOption) (*GetByHeightResponse, error) {
	out := new(GetByHeightResponse)
	err := c.cc.Invoke(ctx, "/staking.StakingService/GetByHeight", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// StakingServiceServer is the server API for StakingService service.
type StakingServiceServer interface {
	GetByHeight(context.Context, *GetByHeightRequest) (*GetByHeightResponse, error)
}

// UnimplementedStakingServiceServer can be embedded to have forward compatible implementations.
type UnimplementedStakingServiceServer struct {
}

func (*UnimplementedStakingServiceServer) GetByHeight(ctx context.Context, req *GetByHeightRequest) (*GetByHeightResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetByHeight not implemented")
}

func RegisterStakingServiceServer(s *grpc.Server, srv StakingServiceServer) {
	s.RegisterService(&_StakingService_serviceDesc, srv)
}

func _StakingService_GetByHeight_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetByHeightRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StakingServiceServer).GetByHeight(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/staking.StakingService/GetByHeight",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StakingServiceServer).GetByHeight(ctx, req.(*GetByHeightRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _StakingService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "staking.StakingService",
	HandlerType: (*StakingServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetByHeight",
			Handler:    _StakingService_GetByHeight_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "grpc/staking/stakingpb/staking.proto",
}
